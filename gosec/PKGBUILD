# Maintainer: ml <ml@visu.li>
pkgname=gosec
pkgver=2.3.0
pkgrel=1
pkgdesc='My golang description'
arch=('x86_64')
url='https://github.com/securego/gosec'
license=('Apache')
depends=('glibc')
makedepends=('go' 'git')
source=("${url}/archive/v${pkgver}/${pkgname}-${pkgver}.tar.gz")
sha256sums=('cd4c0041902960314848c23fc05e825d944fed546ea517381d3bd6c5bdc8b109')

prepare() {
  cd "${pkgname}-${pkgver}"
  go mod download
}

build() {
  # illegal packaging technique: pulling commit hash from archive
  local commit build_date
  commit=$(bsdcat "${pkgname}-${pkgver}.tar.gz" | git get-tar-commit-id)

  local -a x=(
    main.BuildDate="$(TZ=UTC printf '%(%FT%T)TZ' ${SOURCE_DATE_EPOCH})"
    main.GitTag="v${pkgver}"
    main.Version="${pkgver}"
  )
  cd "${pkgname}-${pkgver}"
  export CGO_ENABLED=1
  export CGO_LDFLAGS="$LDFLAGS"
  export CGO_CFLAGS="$CFLAGS"
  export CGO_CPPFLAGS="$CPPFLAGS"
  export CGO_CXXFLAGS="$CXXFLAGS"
  export GOFLAGS='-buildmode=pie -trimpath -modcacherw -mod=readonly'
  go build -o . -ldflags "${x[*]/#/-X=}" ./cmd/...
}

check() {
  cd "${pkgname}-${pkgver}"
  go test -short
}

package() {
  cd "${pkgname}-${pkgver}"
  install -Dm755 "${pkgname}" "${pkgname}util" -t "${pkgdir}/usr/bin"
  install -Dm644 README.md -t "${pkgdir}/usr/share/doc/${pkgname}"
}
